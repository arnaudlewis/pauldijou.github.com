#!/usr/bin/env bash

# Exit if any subcommand fails.
set -e

# Variables
SOURCE_BRANCH="develop"
TARGET_BRANCH="master"
REPO=`git config --get remote.origin.url`
ORIGIN_CREDENTIALS=${REPO/\/\/github.com/\/\/$GITHUB_TOKEN@github.com}
SHA=`git rev-parse --verify HEAD`

echo "Started deploying"
echo "${ORIGIN_CREDENTIALS}"

if [ "$TRAVIS_PULL_REQUEST" != "false" -o "$TRAVIS_BRANCH" != "$SOURCE_BRANCH" ]; then
    echo "Skipping deploy; just doing a build."
    exit 0
fi

# Checkout master branch.
if [ `git branch | grep master` ]
then
  git branch -D master
fi
git checkout -b master

# Build site.
bundle exec jekyll build --config ./_config/common.yml,./_config/prod.yml

# Delete and move files.
find . -maxdepth 1 ! -name '_site' ! -name '.git' ! -name '.gitignore' -exec rm -rf {} \;
mv _site/* .
rm -R _site/

# Push to master.
git config user.name "$USERNAME"
git config user.email "$EMAIL"

# If there are no changes to the compiled out (e.g. this is a README update) then just bail.
if [ -z `git diff --exit-code` ]; then
    echo "No changes to the output on this push; exiting."
    exit 0
fi

git add -fA
git commit --allow-empty -m "Publish: ${SHA}"
git push -f -q $ORIGIN_CREDENTIALS $TARGET_BRANCH

# Move back to previous branch.
# git checkout -

echo "Deployed Successfully!"

exit 0
